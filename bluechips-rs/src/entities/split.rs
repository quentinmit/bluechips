//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.1

use sea_orm::entity::prelude::*;
use super::currency::Currency;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "splits")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub expenditure_id: i32,
    pub user_id: i32,
    pub share: Currency,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::expenditure::Entity",
        from = "Column::ExpenditureId",
        to = "super::expenditure::Column::Id"
    )]
    Expenditure,
    #[sea_orm(
        belongs_to = "super::user::Entity",
        from = "Column::UserId",
        to = "super::user::Column::Id"
    )]
    User,
}

// `Related` trait has to be implemented by hand
impl Related<super::expenditure::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Expenditure.def()
    }
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
